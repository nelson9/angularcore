@import '../../sass/libs/_functions';
@import '../../sass/libs/_vars';
@import '../../sass/libs/_mixins';
@import '../../sass/libs/_skel';

@include skel-breakpoints(( wide: '(max-width: 1680px)', normal: '(max-width: 1280px)', narrow: '(max-width: 980px)', narrower: '(max-width: 840px)', mobile: '(max-width: 736px)' ));

@include skel-layout(( reset: 'full', boxModel: 'border', grid: ( gutters: (50px, 50px) ), conditionals: true, containers: 1400px, breakpoints: ( wide: ( containers: 1200px, grid: ( gutters: (40px, 40px) ), ), normal: ( containers: 960px, ), narrow: ( containers: 95%, grid: ( gutters: (30px, 30px) ), ), narrower: ( containers: (95%, true), ), mobile: ( containers: (100%, true), ) ) ));

$pattern-background-size: 25em;

/* Basic */

body {
    background: _palette(bg);

    &.is-loading {
        *, *:before, *:after {
            @include vendor('animation', 'none !important');
            @include vendor('transition', 'none !important');
        }
    }
}

body, input, select, textarea {
    color: _palette(fg);
    font-family: 'Lato', sans-serif;
    font-size: 15pt;
    font-weight: 300;
    letter-spacing: 0.025em;
    line-height: 1.75em;
}

a {
    @include vendor('transition', ('color 0.2s ease-in-out', 'border-color 0.2s ease-in-out', 'background-color 0.2s ease-in-out'));
    color: darken(_palette(one, bg), 20);
    text-decoration: none;
    border-bottom: dotted 1px;

    &:hover {
        border-bottom-color: transparent;
    }
}

strong, b {
    font-weight: 400;
}

p, ul, ol, dl, table, blockquote {
    margin: 0 0 2em 0;
}

h1, h2, h3, h4, h5, h6 {
    color: inherit;
    font-weight: 300;
    line-height: 1.75em;
    margin-bottom: 1em;
    text-transform: uppercase;

    a {
        color: inherit;
        text-decoration: none;
        border: 0;
    }
}

h2 {
    font-size: 1.5em;
    letter-spacing: 0.1em;
}

h3 {
    font-size: 1.15em;
    letter-spacing: 0.025em;
}

sub {
    font-size: 0.8em;
    position: relative;
    top: 0.5em;
}

sup {
    font-size: 0.8em;
    position: relative;
    top: -0.5em;
}

hr {
    border-top: solid 1px _palette(border);
    border: 0;
    margin-bottom: 1.5em;
}

blockquote {
    border-left: solid 0.5em _palette(border);
    font-style: italic;
    padding: 1em 0 1em 2em;
}

/* Section/Article */

section, article {
    &.special {
        text-align: center;
    }
}

header {
    &.major {
        padding-bottom: 2em;
    }

    &.special {
        margin-bottom: 5em;
        padding-top: 3em;
        position: relative;
        text-align: center;        

        &:before {
            left: 0;
        }

        &:after {
            right: 0;
        }

        h2 {
            margin-bottom: 0;
        }

        h2 + p {
            margin-bottom: 0;
            padding-top: 1.5em;
        }

        .icon {
            cursor: default;
            height: 7em;
            left: 0;
            position: absolute;
            text-align: center;
            top: 1em;
            width: 100%;

            &:before {
                font-size: 3.5em;
                opacity: 0.35;
            }
        }
    }
}

footer {
    > :last-child {
        margin-bottom: 0;
    }

    &.major {
        padding-top: 3em;
    }
}

/* Form */

input[type="text"],
input[type="password"],
input[type="email"],
textarea {
    @include vendor('transition', ('background-color 0.2s ease-in-out', 'border-color 0.2s ease-in-out'));
    @include vendor('appearance', 'none');
    background: none;
    border: solid 1px _palette(border);
    color: inherit;
    display: block;
    padding: 0.75em;
    text-decoration: none;
    width: 100%;
    outline: 0;

    &:focus {
        border-color: _palette(one, bg);
    }
}

input[type="text"],
input[type="password"],
input[type="email"] {
    line-height: 1em;
}

::-webkit-input-placeholder {
    color: inherit;
    opacity: 0.5;
    position: relative;
    top: 3px;
}

:-moz-placeholder {
    color: inherit;
    opacity: 0.5;
}

::-moz-placeholder {
    color: inherit;
    opacity: 0.5;
}

:-ms-input-placeholder {
    color: inherit;
    opacity: 0.5;
}

.formerize-placeholder {
    color: transparentize(_palette(fg), 0.5) !important;
}

/* Image */

.image {
    border: 0;
    position: relative;

    &:before {
        background: url('images/overlay.png');
        content: '';
        height: 100%;
        left: 0;
        position: absolute;
        top: 0;
        width: 100%;
    }

    &.fit {
        display: block;

        img {
            display: block;
            width: 100%;
        }
    }

    &.featured {
        display: block;
        margin: 0 0 2em 0;

        img {
            display: block;
            width: 100%;
        }
    }
}

/* Icon */

.icon {
    @include icon;
    position: relative;

    &.circle {
        @include vendor('transition', 'all 0.2s ease-in-out');
        border: 0;
        border-radius: 100%;
        display: inline-block;
        font-size: 1.25em;
        height: 2.25em;
        left: 0;
        line-height: 2.25em;
        text-align: center;
        text-decoration: none;
        top: 0;
        width: 2.25em;

        &:hover {
            top: -0.2em;
        }

        &.fa-twitter {
            background: _palette(twitter, bg);
            color: _palette(twitter, fg);

            &:hover {
                background: lighten(_palette(twitter, bg), 4);
            }
        }

        &.fa-facebook {
            background: _palette(facebook, bg);
            color: _palette(facebook, fg);

            &:hover {
                background: lighten(_palette(facebook, bg), 4);
            }
        }

        &.fa-google-plus {
            background: _palette(google-plus, bg);
            color: _palette(google-plus, fg);

            &:hover {
                background: lighten(_palette(google-plus, bg), 4);
            }
        }

        &.fa-github {
            background: _palette(github, bg);
            color: _palette(github, fg);

            &:hover {
                background: lighten(_palette(github, bg), 4);
            }
        }

        &.fa-dribbble {
            background: _palette(dribbble, bg);
            color: _palette(dribbble, fg);

            &:hover {
                background: lighten(_palette(dribbble, bg), 4);
            }
        }
    }

    &.featured {
        cursor: default;
        display: block;
        margin: 0 0 1.5em 0;
        opacity: 0.35;
        text-align: center;

        &:before {
            font-size: 5em;
            line-height: 1em;
        }
    }

    > .label {
        display: none;
    }
}

/* List */

ol {
    &.default {
        list-style: decimal;
        padding-left: 1.25em;

        li {
            padding-left: 0.25em;
        }
    }
}

ul {
    &.default {
        list-style: disc;
        padding-left: 1em;

        li {
            padding-left: 0.5em;
        }
    }

    &.icons {
        cursor: default;

        li {
            display: inline-block;
            line-height: 1em;
            padding-left: 0.5em;

            &:first-child {
                padding-left: 0;
            }
        }
    }

    &.featured-icons {
        cursor: default;
        margin: -0.75em 0 0 0;
        opacity: 0.35;
        overflow: hidden;
        position: relative;

        li {
            display: block;
            float: left;
            text-align: center;
            width: 50%;

            .icon {
                display: inline-block;
                font-size: 6.25em;
                height: 1.25em;
                line-height: 1.25em;
                width: 1em;
            }
        }
    }

    &.buttons {
        cursor: default;

        &:last-child {
            margin-bottom: 0;
        }

        li {
            display: inline-block;
            padding: 0 0 0 1.5em;

            &:first-child {
                padding: 0;
            }
        }

        &.vertical {
            li {
                display: block;
                padding: 1.5em 0 0 0;

                &:first-child {
                    padding: 0;
                }
            }
        }
    }
}

/* Table */

table {
    width: 100%;

    &.default {
        width: 100%;

        tbody {
            tr {
                border-bottom: solid 1px _palette(border);
            }
        }

        td {
            padding: 0.5em 1em 0.5em 1em;
        }

        th {
            font-weight: 400;
            padding: 0.5em 1em 0.5em 1em;
            text-align: left;
        }

        thead {
            background: _palette(fg);
            color: #fff;
        }

        tfoot {
        }

        tbody {
        }
    }
}

/* Button */

input[type="button"],
input[type="submit"],
input[type="reset"],
.button {
    @include vendor('appearance', 'none');
    @include vendor('transition', ('color 0.2s ease-in-out', 'border-color 0.2s ease-in-out', 'background-color 0.2s ease-in-out'));
    background: none;
    border: solid 1px;
    color: inherit;
    cursor: pointer;
    display: inline-block;
    font-size: 0.8em;
    font-weight: 900;
    letter-spacing: 2px;
    min-width: 18em;
    padding: 0 0.75em;
    line-height: 3.75em;
    text-align: center;
    text-decoration: none;
    text-transform: uppercase;

    &:hover {
        background: rgba(188,202,206,0.15);
        border-color: inherit;
    }

    &.special {
        background: _palette(one, bg);
        border-color: _palette(one, bg);
        color: _palette(one, fg) !important;

        &:hover {
            background: lighten(_palette(one, bg), 5) !important;
            border-color: lighten(_palette(one, bg), 5) !important;
        }
    }

    &.fit {
        width: 100%;
    }

    &.small {
        font-size: 0.7em;
        min-width: 14em;
        padding: 0.5em 0.30em;
    }
}

/* Wrapper */

.wrapper {
    margin-bottom: 5em;
    padding: 5em;

    &.style1 {
        padding: 0;
    }

    &.style2 {
        background-color: _palette(one, bg);
        color: _palette(one, fg);

        .button {
            &:hover {
                background: rgba(255,255,255,0.15) !important;
            }

            &.special {
                background: _palette(one, fg);
                border-color: _palette(one, fg);
                color: _palette(one, bg) !important;

                &:hover {
                    border-color: inherit !important;
                    color: _palette(one, fg) !important;
                }
            }
        }
    }

    &.style3 {
        background: _palette(two, bg);
        color: _palette(two, fg);
    }

    &.style4 {
        background: _palette(two, bg);
        color: _palette(two, fg);
        padding: 4em;
    }

    &.worked{
        margin-top: 3em;
        padding-bottom: 5em;
        margin-bottom: 5em;
        background: #ffffff;

        
    }
}

/* Modal */
.modal-dialog {
    width: 600px;
    margin: 30px auto;
}

.modal-backdrop {
    opacity: .5;
    z-index: 10030;
    position: fixed;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    z-index: 1040;
    background-color: #000;
}

.modal {
    position: fixed;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    z-index: 1050;
    display: none;
    -webkit-overflow-scrolling: touch;
    outline: 0;
}

.modal-content {
    -webkit-box-shadow: 0 5px 15px rgba(0, 0, 0, 0.5);
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.5);
    position: relative;
    background-color: #fff;
    -webkit-background-clip: padding-box;
    background-clip: padding-box;
    border: 1px solid #999;
    border: 1px solid rgba(0, 0, 0, 0.2);
    border-radius: 6px;
    outline: 0;
    -webkit-box-shadow: 0 3px 9px rgba(0, 0, 0, 0.5);
    box-shadow: 0 3px 9px rgba(0, 0, 0, 0.5);
    padding: 30px;
    z-index: 10050;
}

@include breakpoint(narrow) {
    .modal-lg {
        width: 900px;
    }
}


@include breakpoint(mobile) {
    .modal-dialog {
        width: 90%;
    }

    input[type="button"], input[type="submit"], input[type="reset"], .button {
        min-width: 0;
    }
}



/* Main */

#main {
    background-image: url('images/dark-tl.svg'), url('images/dark-tr.svg'), url('images/dark-bl.svg'), url('images/dark-br.svg');
    background-position: top left, top right, bottom left, bottom right;
    background-repeat: no-repeat;
    background-size: $pattern-background-size;
    padding: 7em 0;

    > :last-child {
        margin-bottom: 0;
    }

    .sidebar {
        section {
            border-top: solid 1px _palette(border);
            margin: 3em 0 0 0;
            padding: 3em 0 0 0;

            &:first-child {
                border-top: 0;
                padding-top: 0;
                margin-top: 0;
            }
        }
    }
}

body.index #main {
    padding-top: 5em;
}